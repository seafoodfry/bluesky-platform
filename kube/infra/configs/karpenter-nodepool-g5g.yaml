# See karpenter-nodepools.yaml for more details on how this manifest comes into play.
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: gpu-g5g
spec:
  role: Karpenter-platform
  amiFamily: AL2023
  amiSelectorTerms:
    - name: "amazon-eks-node-*"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: platform
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: platform
  tags:
    KarpenterManaged: "true"
    Terraform: "true"
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: gpu-g5g
spec:
  template:
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: gpu-g5g
      taints:
        - key: nvidia.com/gpu
          effect: NoSchedule
          value: "true"
      expireAfter: 4h
      terminationGracePeriod: 30m
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64"]
        - key: "node.kubernetes.io/instance-type"
          operator: In
          values: ["g5g.xlarge", "g5g.2xlarge", "g5g.4xlarge", "g5g.8xlarge", "g5g.16xlarge"]
  limits:
    cpu: 50
    memory: 300Gi
    "nvidia.com/gpu": 3
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s